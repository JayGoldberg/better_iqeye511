<!-- Copyright (C) 2006 IQinVision -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>$SP $SN: motion settings</title>
$INC(oemvars.dp)
$INC(camvars.dp)

<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="expires" content="0">

<link rel="stylesheet" href="style.css">

<script  src="lib.js" ></script>
<script  src="gui.js" ></script>
<script  src="boxes.js"></script>
<script>

$INC(oemvars.dp)



$INC(vars_nocache.js.dp)




if (isIQeye6 && "$O(1.13.11)" == "ENABLED") dsstring = "";

window.scrollTo(0,0);
enableJavaAlert();

var initX = $IF($V(IQEYE6),$O(1.2.6.4),$O(1.2.18.6));
var initY = $IF($V(IQEYE6),$O(1.2.6.1),$O(1.2.18.5));

var cropLeft = $O(1.2.6.4,R);
var cropTop = $O(1.2.6.1,R);
var cropwidth = $O(1.2.6.2,R);
var cropheight = $O(1.2.6.3,R);
var camOffsetLeft = cropLeft;	
var camOffsetTop = cropTop;	



var ds = $O(1.2.2);

$IF($V(IQEYE6),
    var maxWidth = $O(1.2.18.3); 
    var maxHeight= $O(1.2.18.4); 
,
    var maxWidth = $O(1.2.20.5); 
    var maxHeight= $O(1.2.20.6);
)


var ds_necessary = Math.max(Math.ceil(maxWidth/322),
			    Math.ceil(maxHeight/322));

var ds_float = Math.max (maxWidth/322, maxHeight/322);




var dsfactor = Math.max(ds,ds_necessary);


var dsreq = ds_necessary;


if (isIQeye6) {
     if (dsreq == 3) dsreq = 4;
}
if (isIQeye6 || isIQeye7) {
    
    if (dsreq > 4) dsreq = 4;
}
if (isIQeye500) {
     
    if (dsreq > 2) dsreq = 2;
}	  


var dsstring = "?ds=" + dsreq;



var imWidth =  Math.floor(maxWidth/ds_float);
var imHeight = Math.floor(maxHeight/ds_float);


if (isIQeye6 && !isIQeye5) dsstring = "";






var orient = "$O(1.2.4,B)";
if (orient.match("90") || orient.match("270") ||
    orient.match("BLTR") || orient.match("TLBR")) {
    var tmpvar;
    tmpvar = imWidth; imWidth = imHeight; imHeight = tmpvar;
}

var imAttr = ' width="' + imWidth + '" height="' + imHeight + '" border=0 ';

var numWindows='$O(1.11.3)'; 
if (numWindows>8) numWindows=8; 
var currBox=1;


var suspendUpdate = false; 




var lefts = new Array(0, $O(1.11.1.1.0,JL)); 
var tops = new Array(0, $O(1.11.1.2.0,JL)); 
var widths = new Array(0, $O(1.11.1.3.0,JL)); 
var heights = new Array(0, $O(1.11.1.4.0,JL)); 
var includes = new Array(0, $O(1.11.1.5.0,JL)); 
var enableds = new Array(0, $O(1.11.1.7.0,JL)); 
var thresholds = new Array(0, $O(1.11.1.8.0,JL));
var sizes = new Array(0, $O(1.11.1.9.0,JL));
var names = new Array(0, $O(1.11.1.10.0,JL));

var ImageCnt = 0;
function onNewImage () 
{
     ImageCnt++;
     window.status = "Images: " + ImageCnt;
}

function InitBoxes ()
{
    if (!UseActiveX()) return;

    var url = 'now.jpg?snap=spush0.2';
    var x, y, w, h;

    if (isIQeye6) {
	url += '?pragma=motion' + dsstring;
    }
    else {
	url += '?wm=dmotion?ov=0' + dsstring;
    }
    x = Math.floor (initX/ds_float);
    y = Math.floor (initY/ds_float);
    w = Math.floor ($O(1.2.6.2)/ds_float);
    h = Math.floor ($O(1.2.6.3)/ds_float);
    CreateControl ("live", 
                  imAttr, 
	  	  "", 
		  '<param name="InternalDptz" value="0">' +
		  '<param name="StreamDptz" value="0">' +
		  '<param name="Windowless" value="1">' + 
		  '<param name="OffsetX" value="' + x + '">' + 
		  '<param name="OffsetY" value="' + y + '">' +
		  '<param name="DisplayWidth" value="' + w + ' ">' + '<param name="DisplayHeight" value="' + h + '">'
		  ,isIQeye6, isIQeye7 || isIQeye5,
		  url);
    
    BoxInit ('live', 'boxes', 320, 255, 9, 1, ds_float);
    var x_shift, y_shift;
     
    x_shift = -'$O(1.2.18.6)';
    y_shift = -'$O(1.2.18.5)';

    BoxSetXshift (x_shift);
    BoxSetYshift (y_shift);
    BoxSetDim (0, 0, 0, 0, 0);
    BoxSetDim (1, 
	       $O(1.11.1.1.1,R), 
	       $O(1.11.1.2.1,R), 
	       $O(1.11.1.3.1,R), 
	       $O(1.11.1.4.1,R)); 
    BoxSetDim (2, 
	       $O(1.11.1.1.2,R), 
	       $O(1.11.1.2.2,R), 
	       $O(1.11.1.3.2,R), 
	       $O(1.11.1.4.2,R)); 
    BoxSetDim (3, 
	       $O(1.11.1.1.3,R), 
	       $O(1.11.1.2.3,R), 
	       $O(1.11.1.3.3,R), 
	       $O(1.11.1.4.3,R)); 
    BoxSetDim (4, 
	       $O(1.11.1.1.4,R), 
	       $O(1.11.1.2.4,R), 
	       $O(1.11.1.3.4,R), 
	       $O(1.11.1.4.4,R)); 
    BoxSetDim (5, 
	       $O(1.11.1.1.5,R), 
	       $O(1.11.1.2.5,R), 
	       $O(1.11.1.3.5,R), 
	       $O(1.11.1.4.5,R)); 
    BoxSetDim (6, 
	       $O(1.11.1.1.6,R), 
	       $O(1.11.1.2.6,R), 
	       $O(1.11.1.3.6,R), 
	       $O(1.11.1.4.6,R)); 
    BoxSetDim (7, 
	       $O(1.11.1.1.7,R), 
	       $O(1.11.1.2.7,R), 
	       $O(1.11.1.3.7,R), 
	       $O(1.11.1.4.7,R)); 
    BoxSetDim (8, 
	       $O(1.11.1.1.8,R), 
	       $O(1.11.1.2.8,R), 
	       $O(1.11.1.3.8,R), 
	       $O(1.11.1.4.8,R)); 
    for (var i = 1; i <= numWindows; i++) {
	if (!enableds[i]) {
	    BoxSetColor (i, 'black');
	    BoxSetVisible (i, false); 
	}
	else if (includes[i]) {
	    BoxSetColor (i, 'blue');
	}
	else BoxSetColor (i, 'red');
    }
    for (var i = 1; i <= 8; i++) {
	BoxSetHcolor (i, 'green');
    }
    DrawBoxes ();
}

function WriteLive ()
{
    if (UseActiveX()) {
	document.write ('<div id="live"></div>');
	document.write ('<span id="boxes">boxes</span>');
	return;
    }

    document.write ('<div id="Applet_Div">Applet</div>');
    var rv = 
	'<applet code="WindowSet.class" name="spapplet" ' + imAttr + '>' 
	+ '<param name="url1" value="1pixgray.gif">'
	+ '<param name="offsetx" value="' 
	+   initX/dsfactor + '">'
	+ '<param name="offsety" value="' 
	+   initY/dsfactor + '">'
	+ '<param name="url2" value="'
	+   $IF($V(IQEYE6),
		'now.jpg?snap=spush0.2?pragma=trigger' + dsstring
		,
		'now.jpg?snap=spush0.2?wm=dmotion?ov=0' + dsstring
	    )
	+ '">'
	+ '<param name="dsfactor" value="' + dsfactor + '">'
	
	+ '<param name="xShift" value="' + -$O(1.2.18.6) + '">'
	+ '<param name="yShift" value="' + -$O(1.2.18.5) + '">';
    
    $IF($V(IQEYE6),rv += '<param name="hw" value="' + $O(1.2.6.2)/dsfactor + '">';
	rv += '<param name="hh" value="' + $O(1.2.6.3)/dsfactor + '">';
	rv += '<param name="motion">';,)
	
	var out = "";
    for (var i=1;i<=numWindows;i++) {
	out += '<param name="saveOid' +i+ '" value="OidCR1.11.2">';
	out += '<param name="xOid' +i+ '" value="OidTR1.11.1.1.' +i+'">';
	out += '<param name="yOid' +i+ '" value="OidTR1.11.1.2.' +i+'">';
	out += '<param name="wOid' +i+ '" value="OidTR1.11.1.3.' +i+'">';
	out += '<param name="hOid' +i+ '" value="OidTR1.11.1.4.' +i+'">';
	
	if ((! enableds[i])) {
	    out += '<param name="visible' + i + '" value="false">';
	    out += '<param name="color' + i + '" value="#000000">';
	}
	else if (includes[i]) {
	    out += '<param name="color' + i + '" value="#0000FF">';
	    out += '<param name="hcolor' + i + '" value="#00FF00">';
	}
	else
	    out += '<param name="color' + i + '" value="#FF0000">';
    }
    
    rv += out;
    rv += '<param name="numWindows" value="9">'
	+ '<param name="selectedWindow" value="1">'
	
	+ '<param name="x1" value="$O(1.11.1.1.1,R)">'
	+ '<param name="y1" value="$O(1.11.1.2.1,R)">'
	+ '<param name="w1" value="$O(1.11.1.3.1,R)">'
	+ '<param name="h1" value="$O(1.11.1.4.1,R)">'
	
	+ '<param name="x2" value="$O(1.11.1.1.2,R)">'
	+ '<param name="y2" value="$O(1.11.1.2.2,R)">'
	+ '<param name="w2" value="$O(1.11.1.3.2,R)">'
	+ '<param name="h2" value="$O(1.11.1.4.2,R)">'
	
	+ '<param name="x3" value="$O(1.11.1.1.3,R)">'
	+ '<param name="y3" value="$O(1.11.1.2.3,R)">'
	+ '<param name="w3" value="$O(1.11.1.3.3,R)">'
	+ '<param name="h3" value="$O(1.11.1.4.3,R)">'
	
	+ '<param name="x4" value="$O(1.11.1.1.4,R)">'
	+ '<param name="y4" value="$O(1.11.1.2.4,R)">'
	+ '<param name="w4" value="$O(1.11.1.3.4,R)">'
	+ '<param name="h4" value="$O(1.11.1.4.4,R)">'
	
	+ '<param name="x5" value="$O(1.11.1.1.5,R)">'
	+ '<param name="y5" value="$O(1.11.1.2.5,R)">'
	+ '<param name="w5" value="$O(1.11.1.3.5,R)">'
	+ '<param name="h5" value="$O(1.11.1.4.5,R)">'
	
	+ '<param name="x6" value="$O(1.11.1.1.6,R)">'
	+ '<param name="y6" value="$O(1.11.1.2.6,R)">'
	+ '<param name="w6" value="$O(1.11.1.3.6,R)">'
	+ '<param name="h6" value="$O(1.11.1.4.6,R)">'
	
	+ '<param name="x7" value="$O(1.11.1.1.7,R)">'
	+ '<param name="y7" value="$O(1.11.1.2.7,R)">'
	+ '<param name="w7" value="$O(1.11.1.3.7,R)">'
	+ '<param name="h7" value="$O(1.11.1.4.7,R)">'
	
	+ '<param name="x8" value="$O(1.11.1.1.8,R)">'
	+ '<param name="y8" value="$O(1.11.1.2.8,R)">'
	+ '<param name="w8" value="$O(1.11.1.3.8,R)">'
	+ '<param name="h8" value="$O(1.11.1.4.8,R)">'
	+ '</applet>';
    CreateApplet ("Applet_Div", rv);
}


var UnhilightTimer;

var UHtimerSet = false;

var LastReasonString = ""


function CheckTrigReason (reason)
{
    
    if (reason.search("motion") == -1) return;

    
    if (reason == LastReasonString) {
	
	if (UHtimerSet) clearTimeout (UnhilightTimer);
	UnhilightTimer = setTimeout ("Unhilight()", 500);
	return;
    }

    
    var curh = new Array (9);
    var newh = new Array (9);
    var i;
    for (i = 1; i < 9; i++) {
	curh[i] = BoxHilighted(i);
    }
    LastReasonString = reason;

    if (reason.search(" 1") > -1) newh[1] = true;
    else newh[1] = false;
    if (reason.search(" 2") > -1) newh[2] = true;
    else newh[2] = false;
    if (reason.search(" 3") > -1) newh[3] = true;
    else newh[3] = false;
    if (reason.search(" 4") > -1) newh[4] = true;
    else newh[4] = false;
    if (reason.search(" 5") > -1) newh[5] = true;
    else newh[5] = false;
    if (reason.search(" 6") > -1) newh[6] = true;
    else newh[6] = false;
    if (reason.search(" 7") > -1) newh[7] = true;
    else newh[7] = false;
    if (reason.search(" 8") > -1) newh[8] = true;
    else newh[8] = false;

    var draw = false;
    for (i = 1; i < 9; i++) {
	if (curh[i] != newh[i]) {
	    BoxHilight (i, newh[i]);
	    draw = true;
	}
    }

    if (draw) {
	DrawBoxes ();
	if (UHtimerSet) clearTimeout (UnhilightTimer);
	UnhilightTimer = setTimeout ("Unhilight()", 1000);
	UHtimerSet = true;
    }
}


function Unhilight ()
{
    UHtimerSet = false;
    window.status = "";
    LastReasonString = "";
    for (var i = 1; i < 9; i++) BoxHilight (i, false);
    DrawBoxes ();
}

function formatIsValid(field) {
    var name = field.name;
    var val = field.value;
    if (name == "boxname") {
	if (val.length > 16) {
	    alert("Please enter no more than 16 alphanumeric characters");
	    field.value = "";
	    select(field);
	    return false;
	}
    }
    if (name == "boxsize") {
	val = parseFloat(val);
	if (isNaN(val) || val<0 || val>100) {
	    alert("Please enter a number between 0 and 100 percent");
	    select(field);
	    return false;
	}
    }
    if (name == "boxthreshold") {
        if (val=='auto') return true;
	if (isNaN(parseInt(val)) || val<1 || val>255) {
	    alert("Please enter a number between 1 and 255");
	    select(field);
	    return false;
	}
    }
    if (name == "boxx" || name == "boxwidth") {
	val = parseInt(val);
	if (isNaN(val) || val<0 || val>cropwidth) {
	    alert("Please enter values from 0 to " + (cropwidth-1));
	    select(field);
	    return false;
	}
	field.value = val;
    }
    if (name == "boxy" || name == "boxheight") {
	val = parseInt(val);
	if (isNaN(val) || val<0 || val>cropheight) {
	    alert("Please enter values from 0 to " + (cropheight-1));
	    select(field);
	    return false;
	}
	field.value = val;  
    }
    return true;
}

function changeMode() {
    var field = document.myform.boxmode;
    var selected = field.options[field.selectedIndex].text;

    if (UseActiveX()) {
	if (selected == "include") {
	    BoxSetColor (currBox, 'blue');
	    BoxSetVisible (currBox, true);
	} else if (selected == "exclude") {
	    BoxSetColor (currBox, 'red');
	    BoxSetVisible (currBox, true);
	} else { 
	    BoxSetColor (currBox, 'black');
	    BoxSetVisible (currBox, false);
	}
	DrawBoxes ();
    }
    else {
	var app = theApplet();
	if (!app) return;
	
	if (selected == "include") {
	    app.setColor(currBox,"#0000FF");
	    app.setVisible(currBox, true);
	} else if (selected == "exclude") {
	    app.setColor(currBox,"#FF0000");
	    app.setVisible(currBox, true);
	} else { 
	    app.setColor(currBox,"#000000");
	    app.setVisible(currBox, false);
	}
	app.paint();
    }
}

function modeChanged() {
    var field = document.myform.boxmode;
    if (!field) return false;
    var selected = field.options[field.selectedIndex].text;

    var changed = false;

    if (selected == "include") {
	if (includes[currBox]==false) changed = true;
	if (enableds[currBox]==false) changed = true;
    } else if (selected == "exclude") {
	if (includes[currBox]==true) changed = true;
	if (enableds[currBox]==false) changed = true;
    } else { 
	if (enableds[currBox]==true) changed = true;
    }
    return changed;
}

function setMode() {
    var field = document.myform.boxmode;

    var selected = field.options[field.selectedIndex].text;

    if (selected == "include") {
	includes[currBox] = true;
	enableds[currBox] = true;
    } else if (selected == "exclude") {
	includes[currBox] = false;
	enableds[currBox] = true;
    } else { 
	enableds[currBox] = false;
    }
}

function sizeChanged() {
    var field = document.myform.boxsize;
    if (!field) return false;
    return (sizes[currBox] != field.value) 
}

function setSize() {
    var field = document.myform.boxsize;
    if (field) sizes[currBox] = field.value; 
}

function thresholdChanged() {
    var field = document.myform.boxthreshold;
    if (!field) return false;
    return (thresholds[currBox] != field.value); 
}

function setThreshold() {
    var field = document.myform.boxthreshold;
    if (field) thresholds[currBox] = field.value; 
}

function nameChanged() {
    var field = document.myform.boxname;
    if (!field) return false;
    return (names[currBox] != field.value); 
}

function setName() {
    var field = document.myform.boxname;
    if (field) names[currBox] = field.value; 
}


function resetToInitialVals() {
    var boxnum = currBox;
    setBoxNum(boxnum);

    if (UseActiveX ()) {
	BoxSetDim (boxnum, lefts[boxnum], tops[boxnum], widths[boxnum],
		   heights[boxnum]);
	DrawBoxes ();
    }
    else {
	var app = theApplet();
	if (!app) return false;
	app.setX(boxnum,lefts[boxnum]);
	app.setY(boxnum,tops[boxnum]);
	app.setW(boxnum,widths[boxnum]);
	app.setH(boxnum,heights[boxnum]);
	app.paint();
    }
    return false;
}


function setBoxNum(val) {
    if (currBox != val) { 
	var str = beforeUnloadHandler();
	if (str) {
	    var reply = confirm(str); 
	    if (!reply) {
		document.myform.whichBox.selectedIndex=currBox-1;
		return;
	    } else { 
		resetToInitialVals();
	    }
	}
    }
    currBox = val-0;

    var f= document.myform;
    var color = 'black';

    if (f.boxname) f.boxname.value = names[currBox];
    if (f.boxsize) f.boxsize.value = sizes[currBox];
    if (f.boxthreshold)	f.boxthreshold.value = thresholds[currBox];
    if (f.boxmode) {
	if (enableds[currBox] == false) {
             
	    
	    
	    

	    f.boxmode.selectedIndex = 2; 
	    color = 'black';
	    
        }
	else if (includes[currBox] == true) {
	    f.boxmode.selectedIndex = 0; 
	    color = 'blue';
	}
	else {
	    f.boxmode.selectedIndex = 1; 
	    color = 'red';
	}
    }

    if (UseActiveX()) {
	BoxSetCur (currBox-0);
	BoxSetVisible (currBox-0, true);
	BoxSetColor (currBox-0, color);
	DrawBoxes ();
    }
    else {
	var app = theApplet();
	if (app) app.selectWindow(currBox-0);
    }
}

function writeBoxSelect() {
    var outString="<select name='whichBox' " 
	+ "onChange='setBoxNum(this.options[this.selectedIndex].text)'>";

    outString += "<option selected>1";
    for (var i=2;i<=numWindows;i++) {
	outString += "<option>" + i;
    }
    outString += "</select>";
    document.write(outString);
}


var myDefaultsHref =
    '<td><b><a href="javascript:void(0)" onClick="return motionFactory();"'
    + ' onMouseOver=\'window.status="restore motion defaults"; return true;\''
    + ' onMouseOut=\'window.status=""\'>'
    + 'restore motion detection defaults</A></B></TD>\n';


function motionFactory() {
    var msg =
         "This will set all motion detection settings to\n"
       + "factory default values.\n"
	+ "Do you want to continue?";
    if (confirm(msg)) {
        setEcam2("OidCB1.11.4","ON");    
        window.onbeforeunload=""; 
        reloadLater();
    }
    return false;
}

function init() {
    for (var i=1; i<=numWindows; i++) {
	includes[i] = (includes[i] == "on");      
	enableds[i] = (enableds[i] == "enabled"); 
	widths[i] = widths[i]-0; 
	heights[i] = heights[i]-0; 
    }
}


function boxChanged() {
    var i = currBox;
    var left, top, width, height;

    if (UseActiveX ()) {
	var dim = BoxGetDim (i);
	left   = dim.left;
	top    = dim.top;
	width  = dim.width;
	height = dim.height;
    }
    else {
	var app = theApplet();
	if (!app) return false;
	
	left   = app.getX(i);
	top    = app.getY(i);
	width  = app.getW(i);
	height = app.getH(i);
    }

    if (Math.abs(lefts[i] -left) > dsfactor || 
	Math.abs(tops[i] - top) > dsfactor ||
	Math.abs(widths[i] - width) > dsfactor  || 
	Math.abs(heights[i] - height) > dsfactor) {
	return true;
    }
    if (nameChanged()) return true; 
    if (modeChanged()) return true; 
    if (thresholdChanged()) return true; 
    if (sizeChanged()) return true;
    return false;
}



var queue = new Array();
var qTop=0;
var qTime = 100;
var qTimeInc = 100;
function queueSubmits(n0,v0) {
    queue[qTop] = new Object;
    queue[qTop].name = n0;
    queue[qTop].val  = v0;
    if (arguments.length>2) {
	for (var n=2;n<arguments.length; n+=2) {
	    queue[qTop].val +=  
		"&" + arguments[n] + "=" + arguments[n+1];
	}
    }
    setTimeout('setEcam2("' + 
	       queue[qTop].name + '","' +
	       queue[qTop].val +'")', qTime);
    qTime += qTimeInc;
    qTop++;
}



function submitChanged() {
    var i = currBox;
    var rv = false;
    var left, top, width, height;

    if (!boxChanged()) return false;

    if (UseActiveX()) {
	var dim = BoxGetDim (i);
	left   = dim.left;
	top    = dim.top;
	width  = dim.width;
	height = dim.height;
    }
    else {
	var app = theApplet();
	if (!app) return false;
	left   = app.getX(i);
	top    = app.getY(i);
	width  = app.getW(i);
	height = app.getH(i);
    }


    if (Math.abs(lefts[i] -left) > dsfactor || 
	Math.abs(tops[i] - top) > dsfactor ||
	Math.abs(widths[i] - width) > dsfactor  || 
	Math.abs(heights[i] - height) > dsfactor) {
	if (isNav || UseActiveX()) {
	    queueSubmits("OidTR1.11.1.1."+i, left,
			   "OidTR1.11.1.2."+i, top,
			   "OidTR1.11.1.3."+i, width,
			   "OidTR1.11.1.4."+i, height);
	} else {
	    app.submitRuntime(i);
	}
	lefts[i] = left;
	tops[i] = top;
	widths[i] = width;
	heights[i] = height;
    }

    if (!nameChanged() && !modeChanged() && !thresholdChanged() && 
	!sizeChanged()) return true; 

    setMode();
    setName();
    setThreshold();
    setSize();

    var include = (includes[i]) ? "ON":"OFF";  
    var enabled = (enableds[i]) ? "ENABLED":"DISABLED";

    if (isNav || UseActiveX()) {
	queueSubmits("OidTR1.11.1.5." + i, include,
		     "OidTR1.11.1.7." + i, enabled,
		     "OidTR1.11.1.8." + i, thresholds[i],
		     "OidTR1.11.1.9." + i, sizes[i],
		     "OidTR1.11.1.10." + i , escape(names[i]));
    } else {
	app.submitURLMod("OidTR1.11.1.5." + i + "=" + include
			 + "&OidTR1.11.1.7." + i + "=" + enabled
			 + "&OidTR1.11.1.8." + i + "=" + thresholds[i]
			 + "&OidTR1.11.1.9." + i + "=" + sizes[i]
			 + "&OidTR1.11.1.10." + i + "=" + escape(names[i]));
    }

    return true;
}








function submitFunction() {
    
    if (!UseActiveX()) {
	var app = theApplet();
	if (!app) return;
    }

    window.status="setting motion window...";

    if (submitChanged()) {
	if (isNav || UseActiveX()) queueSubmits("OidCR1.11.2","ON");
	else app.submitSave(1); 
    }
}









function beforeUnloadHandler() {

    if (boxChanged()){
	return "You forgot to 'apply' your new settings!\n"
	    + "Do you really want to leave without\n"
	    + "applying your new motion settings?";
    } else return;
}

function unloadHandler() {
    suspendUpdate = true;
    unloading = true;

    if (!UseActiveX()) 
         stopApplet();
    window.status="";
    return true;
}

window.onbeforeunload = beforeUnloadHandler;

init();

</script>
</head>

<body bgcolor="#FFFFFF" text="#808080" 
  link=$V(LINKCOLOR) vlink=$V(LINKCOLOR) alink=$V(LINKCOLOR) 
  onUnload="unloadHandler()">

<noscript>
  <font color="#FF0000">
    <b>You must enable JavaScript to use this page.</b></font></noscript>

<table class="main" cellspacing=0 cellpadding=0 width=820>
<script>
  writeSettingsHeader("window"); </script>

  <td class="l"><img src="1pixclear.gif" width=1 height=520></td>
  <td colspan=2 valign="top" align="left">
    <table class="content" cellspacing=0 cellpadding=0 width=780>
<tr>
      <!-- the image area -->
      <td width=330 height=330 style="padding: 44px 18px 4px 38px;
         background: url(gray.gif) no-repeat;"
         valign="top" align="left">
	 <script>WriteLive();</script>
  </td>
  <td rowspan=2  valign="top" align="right" style="padding-top: 18px">

<form name="myform" method="post">
<table class="input" cellspacing=0  cellpadding=0 width=380 style="margin-right: 10px;">
<tr>
  <td class="subtitleleft">&nbsp;</td>
  <td height=20 class="subtitleleft">
    <span id=sendState name=sendState>&nbsp;</span></td></tr>
<tr>
  <td class="subtitleleft" colspan=2>
  <ul id="win">
  <script>
      if (!isVAV)
          document.write('<li><a href="cropset.html">crop</a></li>');
      if (hasExposureSupport)
	  document.write('<li><a href="exposure.html">exposure</a></li>');
      if (hasPrivacySupport)
          document.write('<li><a href="privacy.html">privacy</a></li></li>');
      if (hasMotionSupport)
	  document.write('<li id="current"><a href="motionset.html">motion</a></li></li>');
  </script> 
  </ul></td>
</tr>

<tr>  <td class="startsubleft">&nbsp; </td>
  <td class="startsubw"> Mouse controls <script>writeHelpIcon("setup-motion");</script></td>
</tr>
<tr>  <td class="left" height=22>&nbsp;</td>
  <td class="input">window 
    <script>
      writeBoxSelect();</script></td>
</tr>
<tr> <td class="left" height=22>&nbsp; </td>
  <td class="input">mode 
    <select name="boxmode" onChange="changeMode(this)">
      <option selected>include
      <option>exclude
      <option>disabled
    </select></td>
</tr>
<tr> 
  <td class="left" height=20>&nbsp; </td>
  <td  class="input"> sensitivity 
    <input class="formfield" size=4 name="boxthreshold" 
     value="$O(1.11.1.8.1)"
     onChange="return formatIsValid(this)"></td>
</tr>
    
<!--  when leaving this page without making any changes it warns
      you about not saving your settings.  this is in error tbd   
-->
         
<tr> <td class="left" height=20>&nbsp; </td>
  <td class="input">size 
    <input class="formfield" size=5 name="boxsize" value="$O(1.11.1.9.1)"
     onChange="return formatIsValid(this)"></td>
</tr>
<tr> <td class="left">&nbsp; </td>
   <td class="input">&nbsp; </td>
</tr>
<tr> <td class="left">&nbsp; </td>
   <td class="input" align="center">
    <ul id="buttonp">
     <li><a href=""
          onClick="submitFunction(); return false;" 
          onMouseOver="window.status='submit current settings'; return true;"
          onMouseOut="window.status='';">apply</a></li>
      <li><a href=""
        onClick="return resetToInitialVals();"
        onMouseOver="window.status='restore to initial values'; return true;"
        onMouseOut="window.status='';">cancel</a></li>
      <li><a href=""
        onClick="motionFactory(); return false;"
        onMouseOver="window.status='restore factory defaults'; return true;"
        onMouseOut="window.status='';">default</a></li></ul></td></tr>
    </ul>
     </td>
</tr>
<tr>  <td class="endsubleft">&nbsp;</td>
  <td class="endsub">&nbsp;</td>
</tr>
</table></form>
  </td>
</tr>
<tr>
  <td valign="bottom"  align="center" height=60>&nbsp; </td>
</tr>
</table>
  </td>
  <td class="r"><img src="1pixclear.gif" width=1 height=1></td>
</tr>

<script>
  writeFooter('logout');
  
  if (enableds[currBox] == false)
    document.myform.boxmode.selectedIndex = 2; 
  else if (includes[currBox] == true)
    document.myform.boxmode.selectedIndex = 0; 
  else
    document.myform.boxmode.selectedIndex = 1; 
</script>

<!--
<script for=Iqeye1 event="NewImage()">
    function Iqeye1::NewImage()
    {
	onNewImage ();
    }
</script>
-->

<script for=Iqeye1 event="TriggerImage(reason)">
    function Iqeye1::TriggerImage(reason)
    {
	CheckTrigReason (reason);
    }
</script>

<tr>
  <td class="bl"><img src="1pixclear.gif"  height=1 width=11></td>
  <td class="b" colspan=2><img src="1pixclear.gif"  height=11 width=1></td>
  <td class="br"><img src="1pixclear.gif"></td>
</tr>
</table>
<script>if (UseActiveX()) InitBoxes ();</script>
</body>
</html>


