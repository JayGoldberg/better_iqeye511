<!-- Copyright (C) 2006 - 2011 IQinVision -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><title>$SP $SN: $RSTR(vcamset)</title>
$INC(oemvars.dp)
$INC(camvars.dp)

<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Type" content="text/html; charset=$RCSET">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="expires" content="0">

<link rel="stylesheet" href="style.css">

<script  src="lib.js" ></script>
<script  src="gui.js" ></script>
<script  src="boxes.js"></script>
<script>

$INC(oemvars.dp)



$INC(vars_nocache.js.dp)






window.scrollTo(0,0);
enableJavaAlert();

var PageTitle = "$RSTR(vcamset)";
var PageHelp = "$RSTR(vcamset_help)";

var drawBoxes = (UseActiveX() || canSpush);

var initX = $IF($V(IQEYE6),$O(1.2.6.4),$O(1.2.18.6));
var initY = $IF($V(IQEYE6),$O(1.2.6.1),$O(1.2.18.5));

var cropLeft = $O(1.2.6.4,R);
var cropTop = $O(1.2.6.1,R);
var cropwidth = $O(1.2.6.2,R);
var cropheight = $O(1.2.6.3,R);
var camOffsetLeft = cropLeft;	
var camOffsetTop = cropTop;	



var ds = $O(1.2.2);

$IF($V(IQEYE6),
    var maxWidth = $O(1.2.18.3); 
    var maxHeight= $O(1.2.18.4); 
,
    var maxWidth = $O(1.2.20.5); 
    var maxHeight= $O(1.2.20.6);
)


var ds_necessary = Math.max(Math.ceil(maxWidth/322),
			    Math.ceil(maxHeight/322));

var ds_float = Math.max (maxWidth/322, maxHeight/322);




var dsfactor = Math.max(ds,ds_necessary);


var dsreq = ds_necessary;


if (isIQeye6) {
     if (dsreq == 3) dsreq = 4;
}
if (isIQeye6 || isIQeye7) {
    
    if (dsreq > 4) dsreq = 4;
}
if (isIQeye500) {
     
    if (dsreq > 2) dsreq = 2;
}	  


var dsstring = "?ds=" + dsreq;



var imWidth =  Math.floor(maxWidth/ds_float);
var imHeight = Math.floor(maxHeight/ds_float);


if (isIQeye6 && !isIQeye5 && !isIQeye7) dsstring = "";






var orient = "$O(1.2.4,B)";
if (orient.match("90") || orient.match("270") ||
    orient.match("BLTR") || orient.match("TLBR")) {
    var tmpvar;
    tmpvar = imWidth; imWidth = imHeight; imHeight = tmpvar;
}

if (canSpush) {
    
    imWidth = Math.floor($O(1.2.6.2)/ds_float);
    imHeight = Math.floor($O(1.2.6.3)/ds_float);
}

var imAttr = ' width="' + imWidth + '" height="' + imHeight + '" border=0 ';

var numWindows=8; 
var currBox=1;


var suspendUpdate = false; 




var labels = new Array(0, $O(1.16.1.1.0,JL));
var fpss = new Array(0, $O(1.16.1.2.0,JL));
var lefts = new Array(0, $O(1.16.1.3.0,JL)); 
var tops = new Array(0, $O(1.16.1.4.0,JL)); 
var widths = new Array(0, $O(1.16.1.5.0,JL)); 
var heights = new Array(0, $O(1.16.1.6.0,JL)); 
var dstwids = new Array(0, $O(1.16.1.7.0,JL));
var dsthgts = new Array(0, $O(1.16.1.8.0,JL));
var qualitys = new Array(0, $O(1.16.1.9.0,JL));
var grays = new Array(0, $O(1.16.1.10.0,JL));
var overs = new Array(0, $O(1.16.1.11.0,JL));

var ImageCnt = 0;
function onNewImage () 
{
     ImageCnt++;
     window.status = "Images: " + ImageCnt;
}

function InitBoxes ()
{
    if (!drawBoxes) return;

    var url = 'now.jpg?snap=spush0.2' + dsstring;
    var x, y, w, h;

    x = Math.floor (initX/ds_float);
    y = Math.floor (initY/ds_float);
    w = Math.floor ($O(1.2.6.2)/ds_float);
    h = Math.floor ($O(1.2.6.3)/ds_float);

    if (canSpush) {
	
	imAttr += ' style="margin-left: '+x+'px; margin-top: '+y+'px;" ';
    }

    CreateControl ("live", 
                  imAttr, 
	  	  "", 
		  '<param name="InternalDptz" value="0">' +
		  '<param name="StreamDptz" value="0">' +
		  '<param name="Windowless" value="1">' + 
		  '<param name="OffsetX" value="' + x + '">' + 
		  '<param name="OffsetY" value="' + y + '">' +
		  '<param name="DisplayWidth" value="' + w + ' ">' + '<param name="DisplayHeight" value="' + h + '">'
		  ,isIQeye6, isIQeye7 || isIQeye5,
		  url);
    
    BoxInit ('live', 'boxes', 320, 255, 9, 1, ds_float);
    var x_shift, y_shift;
     
    

    x_shift = -'$O(1.2.18.6)';
    y_shift = -'$O(1.2.18.5)';

    BoxSetXshift (x_shift);
    BoxSetYshift (y_shift);
    BoxSetDim (0, 0, 0, 0, 0);
    BoxSetDim (1, 
	       $O(1.16.1.3.1,R), 
	       $O(1.16.1.4.1,R), 
	       $O(1.16.1.5.1,R), 
	       $O(1.16.1.6.1,R)); 
    BoxSetDim (2, 
	       $O(1.16.1.3.2,R), 
	       $O(1.16.1.4.2,R), 
	       $O(1.16.1.5.2,R), 
	       $O(1.16.1.6.2,R)); 
    BoxSetDim (3, 
	       $O(1.16.1.3.3,R), 
	       $O(1.16.1.4.3,R), 
	       $O(1.16.1.5.3,R), 
	       $O(1.16.1.6.3,R)); 
    BoxSetDim (4, 
	       $O(1.16.1.3.4,R), 
	       $O(1.16.1.4.4,R), 
	       $O(1.16.1.5.4,R), 
	       $O(1.16.1.6.4,R)); 
    BoxSetDim (5, 
	       $O(1.16.1.3.5,R), 
	       $O(1.16.1.4.5,R), 
	       $O(1.16.1.5.5,R), 
	       $O(1.16.1.6.5,R)); 
    BoxSetDim (6, 
	       $O(1.16.1.3.6,R), 
	       $O(1.16.1.4.6,R), 
	       $O(1.16.1.5.6,R), 
	       $O(1.16.1.6.6,R)); 
    BoxSetDim (7, 
	       $O(1.16.1.3.7,R), 
	       $O(1.16.1.4.7,R), 
	       $O(1.16.1.5.7,R), 
	       $O(1.16.1.6.7,R)); 
    BoxSetDim (8, 
	       $O(1.16.1.3.8,R), 
	       $O(1.16.1.4.8,R), 
	       $O(1.16.1.5.8,R), 
	       $O(1.16.1.6.8,R)); 
    for (var i = 1; i <= numWindows; i++) {
	BoxSetColor (i, 'blue');
    }
    DrawBoxes ();
    BoxSetSelectable (true);
}

function WriteLive ()
{
    document.write ('<td id="livetd"');
    document.write (' width=330 height=330 valign="top" align="left">');

    if (drawBoxes) {
	document.write ('<div id="live"></div>');
	document.write ('<span id="boxes">boxes</span>');
	return;
    }

    document.write ('<div id="Applet_Div">Applet</div>');
    var rv = 
	'<applet code="WindowSet.class" name="spapplet" ' + imAttr + '>' 
	+ '<param name="url1" value="1pixgray.gif">'
	+ '<param name="offsetx" value="' 
	+   initX/dsfactor + '">'
	+ '<param name="offsety" value="' 
	+   initY/dsfactor + '">'
	+ '<param name="url2" value="'
	+   $IF($V(IQEYE6),
		'now.jpg?snap=spush0.2' + dsstring
		,
		'now.jpg?snap=spush0.2' + dsstring
	    )
	+ '">'
	+ '<param name="dsfactor" value="' + dsfactor + '">'
	
	+ '<param name="xShift" value="' + -$O(1.2.18.6) + '">'
	+ '<param name="yShift" value="' + -$O(1.2.18.5) + '">';
    
    $IF($V(IQEYE6),rv += '<param name="hw" value="' + $O(1.2.6.2)/dsfactor + '">';
	rv += '<param name="hh" value="' + $O(1.2.6.3)/dsfactor + '">';
	rv += '<param name="motion">';,)
	
	var out = "";
    for (var i=1;i<=numWindows;i++) {
	out += '<param name="saveOid' +i+ '" value="OidCR1.16.2">';
	out += '<param name="xOid' +i+ '" value="OidTR1.16.1.3.' +i+'">';
	out += '<param name="yOid' +i+ '" value="OidTR1.16.1.4.' +i+'">';
	out += '<param name="wOid' +i+ '" value="OidTR1.16.1.5.' +i+'">';
	out += '<param name="hOid' +i+ '" value="OidTR1.16.1.6.' +i+'">';
	out += '<param name="color' + i + '" value="#0000FF">';
    }
    
    rv += out;
    rv += '<param name="numWindows" value="9">'
	+ '<param name="selectedWindow" value="1">'
	
	+ '<param name="x1" value="$O(1.16.1.3.1,R)">'
	+ '<param name="y1" value="$O(1.16.1.4.1,R)">'
	+ '<param name="w1" value="$O(1.16.1.5.1,R)">'
	+ '<param name="h1" value="$O(1.16.1.6.1,R)">'
	
	+ '<param name="x2" value="$O(1.16.1.3.2,R)">'
	+ '<param name="y2" value="$O(1.16.1.4.2,R)">'
	+ '<param name="w2" value="$O(1.16.1.5.2,R)">'
	+ '<param name="h2" value="$O(1.16.1.6.2,R)">'
	
	+ '<param name="x3" value="$O(1.16.1.3.3,R)">'
	+ '<param name="y3" value="$O(1.16.1.4.3,R)">'
	+ '<param name="w3" value="$O(1.16.1.5.3,R)">'
	+ '<param name="h3" value="$O(1.16.1.6.3,R)">'
	
	+ '<param name="x4" value="$O(1.16.1.3.4,R)">'
	+ '<param name="y4" value="$O(1.16.1.4.4,R)">'
	+ '<param name="w4" value="$O(1.16.1.5.4,R)">'
	+ '<param name="h4" value="$O(1.16.1.6.4,R)">'
	
	+ '<param name="x5" value="$O(1.16.1.3.5,R)">'
	+ '<param name="y5" value="$O(1.16.1.4.5,R)">'
	+ '<param name="w5" value="$O(1.16.1.5.5,R)">'
	+ '<param name="h5" value="$O(1.16.1.6.5,R)">'
	
	+ '<param name="x6" value="$O(1.16.1.3.6,R)">'
	+ '<param name="y6" value="$O(1.16.1.4.6,R)">'
	+ '<param name="w6" value="$O(1.16.1.5.6,R)">'
	+ '<param name="h6" value="$O(1.16.1.6.6,R)">'
	
	+ '<param name="x7" value="$O(1.16.1.3.7,R)">'
	+ '<param name="y7" value="$O(1.16.1.4.7,R)">'
	+ '<param name="w7" value="$O(1.16.1.5.7,R)">'
	+ '<param name="h7" value="$O(1.16.1.6.7,R)">'
	
	+ '<param name="x8" value="$O(1.16.1.3.8,R)">'
	+ '<param name="y8" value="$O(1.16.1.4.8,R)">'
	+ '<param name="w8" value="$O(1.16.1.5.8,R)">'
	+ '<param name="h8" value="$O(1.16.1.6.8,R)">'
	+ '</applet>';
    CreateApplet ("Applet_Div", rv);
    document.write ('</td>');
}

function formatIsValid(field) {
    var name = field.name;
    var val = field.value;
    if (name == "boxname") {
	if (val.length > 16) {
	    alert("Please enter no more than 16 alphanumeric characters");
	    field.value = "";
	    select(field);
	    return false;
	}
    }
    if (name == "boxx" || name == "boxwidth") {
	val = parseInt(val);
	if (isNaN(val) || val<0 || val>cropwidth) {
	    alert("Please enter values from 0 to " + (cropwidth-1));
	    select(field);
	    return false;
	}
	field.value = val;
    }
    if (name == "boxy" || name == "boxheight") {
	val = parseInt(val);
	if (isNaN(val) || val<0 || val>cropheight) {
	    alert("Please enter values from 0 to " + (cropheight-1));
	    select(field);
	    return false;
	}
	field.value = val;  
    }
    return true;
}



function resetToInitialVals() {
    var boxnum = currBox;
    setBoxNum(boxnum);

    if (drawBoxes) {
	BoxSetDim (boxnum, lefts[boxnum], tops[boxnum], widths[boxnum],
		   heights[boxnum]);
	DrawBoxes ();
    }
    else {
	var app = theApplet();
	if (!app) return false;
	app.setX(boxnum,lefts[boxnum]);
	app.setY(boxnum,tops[boxnum]);
	app.setW(boxnum,widths[boxnum]);
	app.setH(boxnum,heights[boxnum]);
	app.paint();
    }
    return false;
}


function setBoxNum(val) {
    if (currBox != val) { 
	var str = beforeUnloadHandler();
	if (str) {
	    var reply = confirm(str); 
	    if (!reply) {
		document.myform.whichBox.selectedIndex=currBox-1;
		return;
	    } else { 
		resetToInitialVals();
	    }
	}
    }
    currBox = val-0;

    var f= document.myform;
    var color = 'blue';

    if (drawBoxes) {
	
	BoxSetCur (currBox-0);
	BoxSetVisible (currBox-0, true);
	BoxSetColor (currBox-0, color);
	DrawBoxes ();
    }
    else {
	var app = theApplet();
	if (app) app.selectWindow(currBox-0);
    }
   
    updateVcamValues ();
}

function writeBoxSelect() {
    var outString="<select name='whichBox' " 
	+ "onChange='setBoxNum(this.options[this.selectedIndex].text)'>";

    outString += "<option selected>1";
    for (var i=2;i<=numWindows;i++) {
	outString += "<option>" + i;
    }
    outString += "</select>";
    document.write(outString);
}


var myDefaultsHref =
    '<li><a href="javascript:void(0)" onClick="return vcamFactory();"'
    + ' onMouseOver=\'window.status="$RSTR(resdef)"; return true;\''
    + ' onMouseOut=\'window.status=""\'>'
    + '$RSTR(resdef)</a></li>\n';


function vcamFactory() {
    var msg = "$RSTR(warnvcamfact)";
    if (confirm(msg)) {
        
	var i;
	
	for (i = 1; i <= numWindows; i++) {
	    setEcam2("OidCR1.16.1.12." + i, "ON");
	}
	setEcam2("OidCR1.16.2","ON");      
        window.onbeforeunload=""; 
        reloadLater();
    }
    return false;
}

function init() {
    for (var i=1; i<=numWindows; i++) {
	widths[i] = widths[i]-0; 
	heights[i] = heights[i]-0; 
    }
}


function BoxUpdated (box)
{
    
    
}


function BoxSelected (box)
{
    if (currBox == box) return; 
    document.myform.whichBox.selectedIndex = box-1; 
    setBoxNum(box);
}


function boxChanged() {
    var i = currBox;
    var left, top, width, height;

    if (drawBoxes) {
	var dim = BoxGetDim (i);
	left   = dim.left;
	top    = dim.top;
	width  = dim.width;
	height = dim.height;
    }
    else {
	var app = theApplet();
	if (!app) return false;
	
	left   = app.getX(i);
	top    = app.getY(i);
	width  = app.getW(i);
	height = app.getH(i);
    }

    if (Math.abs(lefts[i] -left) > dsfactor || 
	Math.abs(tops[i] - top) > dsfactor ||
	Math.abs(widths[i] - width) > dsfactor  || 
	Math.abs(heights[i] - height) > dsfactor) {
	return true;
    }
    return false;
}



var queue = new Array();
var qTop=0;
var qTime = 100;
var qTimeInc = 100;
function queueSubmits(n0,v0) {
    queue[qTop] = new Object;
    queue[qTop].name = n0;
    queue[qTop].val  = v0;
    if (arguments.length>2) {
	for (var n=2;n<arguments.length; n+=2) {
	    queue[qTop].val +=  
		"&" + arguments[n] + "=" + arguments[n+1];
	}
    }
    setTimeout('setEcam2("' + 
	       queue[qTop].name + '","' +
	       queue[qTop].val +'")', qTime);
    qTime += qTimeInc;
    qTop++;
}


function submitChanged(all) {
    var i = currBox;
    var rv = false;
    var left, top, width, height;

    if (!boxChanged()) return false;

    if (drawBoxes) {
	var dim = BoxGetDim (i);
	left   = dim.left;
	top    = dim.top;
	width  = dim.width;
	height = dim.height;
    }
    else {
	var app = theApplet();
	if (!app) return false;
	left   = app.getX(i);
	top    = app.getY(i);
	width  = app.getW(i);
	height = app.getH(i);
    }


    if (Math.abs(lefts[i] -left) > dsfactor || 
	Math.abs(tops[i] - top) > dsfactor ||
	Math.abs(widths[i] - width) > dsfactor  || 
	Math.abs(heights[i] - height) > dsfactor) {
	if (isNav || drawBoxes) {
	    queueSubmits("OidTR1.16.1.3."+i, left,
			   "OidTR1.16.1.4."+i, top,
			   "OidTR1.16.1.5."+i, width,
			   "OidTR1.16.1.6."+i, height);
	} else {
	    app.submitRuntime(i);
	}
	lefts[i] = left;
	tops[i] = top;
	widths[i] = width;
	heights[i] = height;
    }
    else if (!all) return false; 

    if (all) {
	if (isNav || drawBoxes) {
	    queueSubmits("OidTR1.16.1.1." + i, escape(labels[i]),
			 "OidTR1.16.1.2." + i, fpss[i],
			 "OidTR1.16.1.7." + i, dstwids[i],
			 "OidTR1.16.1.8." + i, dsthgts[i],
			 "OidTR1.16.1.9." + i, qualitys[i],
			 "OidTR1.16.1.10." + i , grays[i],
			 "OidTR1.16.1.11." + i , overs[i]
		);
	} else {
	    app.submitURLMod("OidTR1.16.1.1." + i + "=" + escape(labels[i])
			     + "&OidTR1.16.1.2." + i + "=" + fpss[i]
			     + "&OidTR1.16.1.7." + i + "=" + dstwids[i]
			     + "&OidTR1.16.1.8." + i + "=" + dsthgts[i]
			     + "&OidTR1.16.1.9." + i + "=" + qualitys[i]
			     + "&OidTR1.16.1.10." + i + "=" + grays[i]
			     + "&OidTR1.16.1.11." + i + "=" + overs[i]
		);
	}
    }
    updateVcamValues ();

    return true;
}








function submitFunction(all) {
    
    if (!drawBoxes) {
	var app = theApplet();
	if (!app) return;
    }

    window.status="setting vcam window...";

    if (submitChanged(all)) {
	if (isNav || drawBoxes) queueSubmits("OidCR1.16.2","ON");
	else app.submitSave(1); 
    }
}

function setDestWidth (field)
{
    var val = field.value;
    var num = parseInt(val);

    if (isNaN (num) || num < 0) {
	alert ("Please enter a positive integer value");
	return;
    }

    dstwids[currBox] = val;
    setEcam2("OidTB1.16.1.7." + currBox, dstwids[currBox]);
}

function setDestHeight (field)
{
    var val = field.value;
    var num = parseInt(val);

    if (isNaN (num) || num < 0) {
	alert ("Please enter a positive integer value");
	return;
    }

    dsthgts[currBox] = val;
    setEcam2("OidTB1.16.1.8." + currBox, dsthgts[currBox]);
}

function disableDestWidHgt ()
{
    getObject ("destwid").disabled = true;
    getObject ("desthgt").disabled = true;
}

function enableDestWidHgt ()
{
    getObject ("destwid").disabled = false;
    getObject ("desthgt").disabled = false;
}

function setVcamDestRes (field)
{
    var val = field.value;
    if (val == "custom") {
	dstwids[currBox] = getObject ("destwid").value;
	dsthgts[currBox] = getObject ("desthgt").value;
	enableDestWidHgt ();
    }
    else if (val == "1:1") {
	dstwids[currBox] = "0";
	dsthgts[currBox] = "0";
	disableDestWidHgt ();
    }
    else {
	var dims = val.split("x");
	dstwids[currBox] = dims[0];
	dsthgts[currBox] = dims[1];
	disableDestWidHgt ();
    }
    setEcam2("OidTB1.16.1.7." + currBox, dstwids[currBox]);
    setEcam2("OidTB1.16.1.8." + currBox, dsthgts[currBox]);
    updateDestWidHgt ();
}

function setVcamOver (field)
{
    var val = field.value;
    overs[currBox] = val;
    setEcam2("OidTB1.16.1.11." + currBox, val);
}

function writeVcamDestResSelect ()
{
    
    var curDest = dstwids[currBox] + "x" + dsthgts[currBox];
    if ((dstwids[currBox] == 0 &&
	 dsthgts[currBox] == 0) ||
	(dstwids[currBox] == widths[currBox] &&
	 dsthgts[currBox] == heights[currBox])) curDest = "1:1";
    
    var valArray = new Array ("320x240", "640x480", "1:1", "custom");
    var textArray = new Array ("320x240 (QVGA)", "640x480 (VGA)", "1:1", "$RSTR(custom)");
    var i;
    var selected = -1;

    for (i = 0; i < textArray.length; i++) {
	if (curDest == textArray[i]) {
	    selected = i;
	    break;
	}
    }

    
    if (selected == -1) {
	
	
	selected = textArray.length-1;
	enableDestWidHgt ();
    }
    else {
	disableDestWidHgt ();
    }

    var outstring = 
	"<select name='vcamDestResSelect' id='vcamDestResSelect' onChange='setVcamDestRes(this);'>";
    for (i=0; i < textArray.length; i++) {
	outstring += (i==selected) ? '<option selected ' : '<option ';
	outstring += 'value="' + valArray[i] + '">' + textArray[i] 
	    + '</option>\n';
    }
    outstring += '</select>\n';
    return outstring;
}

function writeVcamDestWid ()
{
    if (dstwids[currBox] == 0 &&
	dsthgts[currBox] == 0) return String(widths[currBox]);
    return String(dstwids[currBox]);
}

function writeVcamDestHgt ()
{
    if (dstwids[currBox] == 0 &&
	dsthgts[currBox] == 0) return String(heights[currBox]);
    return String(dsthgts[currBox]);
}

function setVcamRate (field)
{
    var val = field.value.toLowerCase();
    if (isNaN(parseFloat(val))) {
	alert ('Specify a numeric value');
	field.focus();
	return;
    }
    setEcam2("OidTB1.16.1.2." + currBox, val);
    fpss[currBox] = val;
}


function writeVcamRateSelect ()
{
    
    var maxrate = '$O(1.2.31,R)';
    var imgrrate = '$O(1.2.20.7,R)';

    if (maxrate == 0) {
	
	maxrate = Math.round (imgrrate);
    }

    rate = Math.round (maxrate);
    var arraySize = Math.round (maxrate) + 3;
    var valArray = new Array(arraySize);
    var textArray = new Array(arraySize);
    var i;
    var rate;

    for (i = 0; i < (arraySize - 3); i++) {
	valArray[i] = rate;
	textArray[i] = rate;
	rate -= 1;
    }
    valArray[i++] = "0.5";
    valArray[i++] = "0.25";
    valArray[i++] = "0.125";

    i -= 3;
    textArray[i++] = "0.5 (1 f / 2 sec)";
    textArray[i++] = "0.25 (1 f / 4 sec)";
    textArray[i++] = "0.125 (1 f / 8 sec)";

    
    var selected = -1;
    var val = fpss[currBox];
    val = val.toLowerCase ();
    var intervalStr = val;

    
    var fval = parseFloat (val);
    if (!isNaN (fval)) {
	fval = Math.round (fval * 10000)/10000;
	val = fval;
    }

    for (i=0; i < valArray.length; i++) {
	if (val == parseFloat (valArray[i])) {
	    selected = i;
	    break;
	}
    }
    var outstring = 
	"<select name='vcamRateSelect' id='vcamRateSelect' onChange='setVcamRate(this);'>";

    for (i=0; i < arraySize; i++) {
	var color;
	
	if ((maxrate % valArray[i]) == 0) {
	    color = "";
	}
	else {
	    color = ' style="color: gray" ';
	}
	outstring += (i==selected) ? '<option selected ' : '<option ';
	outstring += 'value="' + valArray[i] + '"' + color + '>' + textArray[i] 
	    + '</option>\n';
    }
    if (selected == -1) {
	outstring += "<option selected value=" + val + 
	    ">" + val + "</option>";
    }
    outstring += '</select>\n';
    return outstring;
}

function writeVcamOverlaySelect ()
{
    var enabled;

    if (overs[currBox] == "0") {
	enabled = false;
    }
    else {
	enabled = true;
    }
    var outstring = 
	'<select name="vcamOverSelect" id="vcamOverSelect" onChange="setVcamOver(this);">';

    outstring += '<option value="1"';
    if (enabled) {
	outstring += ' selected';
    }
    outstring += '>$RSTR(enabled)</option>';

    outstring += '<option value="0"';
    if (!enabled) {
	outstring += ' selected';
    }
    outstring += '>$RSTR(disabled)</option>';

    outstring += '</select>\n';
    return outstring;
}

function writeVcamUrl ()
{
    
    var url;
    var port;
    port = $O(7.1) + currBox;
    url = "http://$SI:" + String(port);
    return url;
}









function beforeUnloadHandler() {

    if (boxChanged()){
	return "$RSTR(applywarn)";
    } else return;
}

function updateRateSelect ()
{
    getObject ("rate_select").innerHTML = writeVcamRateSelect ();
}

function updateDestResSelect ()
{
    getObject ("destres_select").innerHTML = writeVcamDestResSelect ();
}

function updateDestWidHgt ()
{
    getObject ("destwid").value = writeVcamDestWid ();
    getObject ("desthgt").value = writeVcamDestHgt ();
}

function updateOverlay ()
{
    getObject ("overlay_select").innerHTML = writeVcamOverlaySelect ();
}


function updateVirtualUrl ()
{
    
    var port;

    port = $O(7.1) + currBox;
    
    var urlfield = getObject ("virt_url");
    
    urlfield.innerHTML = port;
}


function updateVcamValues ()
{
    updateRateSelect ();
    updateDestResSelect ();
    updateVirtualUrl ();
    updateDestWidHgt ();
    updateOverlay ();
}

function showVcam ()
{
    if (boxChanged()) {
	if (confirm ("You forgot to 'apply' your new settings.\n"
		     + "Do you still want to display a live view?\n") 
	    == false) return;
    }

    var width = dstwids[currBox];
    var height = dsthgts[currBox];
    var url;
    var port;

    if (width == "0" &&
	height == "0") {
	width = widths[currBox];
	height = heights[currBox];
    }

    port = $O(7.1) + currBox;
    url = "http://$SI:" + String(port) + "/virtcamvid.html?width=" + width +
	"&height=" + height + "&vcam=" + currBox;
    
    var vcamWin = window.open (url, "_blank", "width="+width+",height="+height);
    vcamWin.focus();
}

function LoadHandler() {
    updateVcamValues ();
}

function unloadHandler() {
    suspendUpdate = true;
    unloading = true;

    if (!drawBoxes) 
         stopApplet();
    window.status="";
    return true;
}

window.onbeforeunload = beforeUnloadHandler;

init();

</script>
</head>

<body bgcolor="#FFFFFF" text="#808080" 
  link=$V(LINKCOLOR) vlink=$V(LINKCOLOR) alink=$V(LINKCOLOR) 
  onLoad="LoadHandler()" onUnload="unloadHandler()">

<noscript>
  <font color="#FF0000">
    <b>You must enable JavaScript to use this page.</b></font></noscript>

<table class="main" cellspacing=0 cellpadding=0 width=850>
<script>
  writeSettingsHeader("window"); </script>

  <td class="l"><img src="1pixclear.gif" width=1 height=520></td>
  <td colspan=2 valign="top" align="left">
    <table class="content" cellspacing=0 cellpadding=0 width=850>
<tr>
      <!-- the image area -->
	 <script>WriteLive();</script>
  <td rowspan=2  valign="top" align="right" style="padding-top: 18px">

<form name="myform" method="post">
<table class="input" cellspacing=0  cellpadding=0 width=420 style="margin-right: 10px;">
<tr>
  <td class="subtitleleft">&nbsp;</td>
  <td height=20 class="subtitleleft">
    <span id=sendState name=sendState>&nbsp;</span></td></tr>
<tr>
  <td class="subtitleleft" colspan=2>
  <ul id="win">
  <script>
      if (!isVAV)
          document.write('<li><a href="cropset.html">$RSTR(crop)</a></li>');
      if (hasExposureSupport)
	  document.write('<li><a href="exposure.html">$RSTR(exposure)</a></li>');
      if (hasAWBSupport)
          document.write('<li><a href="awb.html">$RSTR(awb)</a></li>');
      if (hasPrivacySupport)
          document.write('<li><a href="privacy.html">$RSTR(privacy)</a></li></li>');
      if (hasMotionSupport)
	  document.write('<li><a href="motionset.html">$RSTR(motion)</a></li></li>');
      document.write('<li id="current"><a href="vcamset.html">$RSTR(vcam)</a></li></li>');
  </script> 
  </ul></td>
</tr>

<tr>  <td class="startsubleft">&nbsp; </td>
  <td class="startsubw">$RSTR(vtitle)<script>writeHelpIcon("setup-vcam");</script></td>
</tr>

<tr>  <td class="left" height=22>&nbsp;</td>
  <td class="input" helpbold="$RSTR(vcam)" myhelp="$RSTR(vcamnum_help)">$RSTR(vcam) <script>
      writeBoxSelect();</script></td>
</tr>

<tr> 
   <td class="left" height=22>&nbsp; </td>
   <td class="input" helpbold="$RSTR(fps)" myhelp="$RSTR(vcamfps_help)">$RSTR(fps) <span id="rate_select"></span>
   </td>
</tr>
    
<tr> 
   <td class="left" height=22>&nbsp; </td>
   <td class="input" helpbold="$RSTR(dispres)" myhelp="$RSTR(vcamdispres_help)">$RSTR(dispres) <span id="destres_select"></span>
   </td>
</tr>

<tr> 
   <td class="left" height=22>&nbsp; </td>
   <td class="input" helpbold="$RSTR(dispwid)" myhelp="$RSTR(vcamdispwid_help)">$RSTR(dispwid) <input onChange="setDestWidth(this);" disabled id="destwid">
   </td>
</tr>

<tr> 
   <td class="left" height=22>&nbsp; </td>
   <td class="input" helpbold="$RSTR(disphgt)" myhelp="$RSTR(vcamdispwid_help)">$RSTR(disphgt) <input onChange="setDestHeight(this);" disabled id="desthgt">
   </td>
</tr>

<tr> 
   <td class="left" height=22>&nbsp; </td>
   <td class="input" helpbold="$RSTR(overtxt)" myhelp="$RSTR(vcamovertxt_help)">$RSTR(overtxt) <span id="overlay_select"></span>
   </td>
</tr>

<tr> 
   <td class="left" height=22>&nbsp; </td>
   <td class="input" helpbold="$RSTR(Addr)" myhelp="$RSTR(vcamaddr_help)">$RSTR(Addr): $SI:<span id="virt_url" style="color: black; font-weight: bolder"></span> 
<!-- <input readonly style="background:
transparent; border-style: none;" id="virt_url" value="camera url"> --> 
   </td>
</tr>

<!--
<tr> 
   <td class="left" height=22>&nbsp; </td>
   <a onclick="showVcam();">show vcam</a>
   </td>
</tr>
-->

<tr> <td class="left">&nbsp; </td>
   <td class="input">&nbsp; </td>
</tr>
<tr> <td class="left">&nbsp; </td>
   <td class="input" align="center">
    <ul id="buttonp">

     <li><a href=""
          onClick="submitFunction(true); return false;" 
          onMouseOver="window.status='submit current settings'; return true;"
          onMouseOut="window.status='';">$RSTR(apply)</a></li>
      <li><a href=""
        onClick="return resetToInitialVals();"
        onMouseOver="window.status='restore to initial values'; return true;"
        onMouseOut="window.status='';">$RSTR(cancel)</a></li>

     <li><a href=""
          onClick="showVcam(); return false;" 
          onMouseOver="window.status='$RSTR(vprev)'; return true;"
          onMouseOut="window.status='';">$RSTR(preview)</a></li>

<!--
      <li><a href=""
        onClick="vcamFactory(); return false;"
        onMouseOver="window.status='restore factory defaults'; return true;"
        onMouseOut="window.status='';">$RSTR(resdef)</a></li></ul></td></tr>
-->
    </ul>
     </td>
</tr>
<tr>  <td class="endsubleft">&nbsp;</td>
  <td class="endsub">&nbsp;</td>
</tr>
</table></form>
  </td>
</tr>
<tr>
  <td valign="bottom"  align="center" height=60>&nbsp; </td>
</tr>
</table>
  </td>
  <td class="r"><img src="1pixclear.gif" width=1 height=1></td>
</tr>

<script>
  writeFooter('myDefaults');
  
</script>


<tr>
  <td class="bl"><img src="1pixclear.gif"  height=1 width=11></td>
  <td class="b" colspan=2><img src="1pixclear.gif"  height=11 width=1></td>
  <td class="br"><img src="1pixclear.gif"></td>
</tr>
</table>
<script>if (drawBoxes) InitBoxes ();</script>
</body>
</html>


